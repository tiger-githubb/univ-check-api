{
  "openapi": "3.0.0",
  "info": {
    "title": "University Attendance System API",
    "description": "API de gestion des pr√©sences universitaires",
    "version": "1.0.0"
  },
  "paths": {
    "/api/v1/auth/signin": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Sign in",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User connected successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignedUserDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          },
          "409": {
            "description": "Invalid email or password"
          }
        }
      }
    },
    "/api/v1/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Create a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          },
          "409": {
            "description": "Invalid email or password"
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": [
          "Users management"
        ],
        "summary": "Get all users",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "tags": [
          "Users management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "Users management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Users management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/v1/academic-years": {
      "get": {
        "tags": [
          "Academic years"
        ],
        "summary": "Get all years",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of academic years",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AcademicYear"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Academic years"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create a new year",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAcademicYearDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Year created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcademicYear"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          }
        }
      }
    },
    "/api/v1/academic-years/{id}": {
      "get": {
        "tags": [
          "Academic years"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get year by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Academic year found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcademicYear"
                }
              }
            }
          },
          "404": {
            "description": "Year not found"
          }
        }
      },
      "put": {
        "tags": [
          "Academic years"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update year",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAcademicYearDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Year updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcademicYear"
                }
              }
            }
          },
          "404": {
            "description": "Year not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Academic years"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete academic year",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Year deleted successfully"
          },
          "404": {
            "description": "Year not found"
          }
        }
      }
    },
    "/api/v1/organizations": {
      "get": {
        "tags": [
          "Organizations management"
        ],
        "summary": "Get all organizations",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of organizations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organisation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Organizations management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create a new organization",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganisationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Organization created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          }
        }
      }
    },
    "/api/v1/organizations/{id}": {
      "get": {
        "tags": [
          "Organizations management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get organization by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              }
            }
          },
          "404": {
            "description": "Organization not found"
          }
        }
      },
      "put": {
        "tags": [
          "Organizations management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update organization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganisationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Organization updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              }
            }
          },
          "404": {
            "description": "Organization not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Organizations management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete organization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization deleted successfully"
          },
          "404": {
            "description": "Organization not found"
          }
        }
      }
    },
    "/api/v1/universities": {
      "get": {
        "tags": [
          "Universities"
        ],
        "summary": "Get all universities",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of universities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Universite"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Universities"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create a new university",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUniversiteDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "University created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Universite"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          }
        }
      }
    },
    "/api/v1/universities/{id}": {
      "get": {
        "tags": [
          "Universities"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get university by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "University found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Universite"
                }
              }
            }
          },
          "404": {
            "description": "University not found"
          }
        }
      },
      "put": {
        "tags": [
          "Universities"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update university",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUniversiteDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "University updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Universite"
                }
              }
            }
          },
          "404": {
            "description": "University not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Universities"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete university",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "University deleted successfully"
          },
          "404": {
            "description": "University not found"
          }
        }
      }
    },
    "/api/v1/departmens": {
      "get": {
        "tags": [
          "D√©partements"
        ],
        "summary": "Get all departmens",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of departmens",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Departement"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "D√©partements"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create a new department",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDepartementDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Department created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Departement"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          }
        }
      }
    },
    "/api/v1/departmens/{id}": {
      "get": {
        "tags": [
          "D√©partements"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get department by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Department found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Departement"
                }
              }
            }
          },
          "404": {
            "description": "Department not found"
          }
        }
      },
      "put": {
        "tags": [
          "D√©partements"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update department",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDepartementDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Department updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Departement"
                }
              }
            }
          },
          "404": {
            "description": "Department not found"
          }
        }
      },
      "delete": {
        "tags": [
          "D√©partements"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete department",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Department deleted successfully"
          },
          "404": {
            "description": "Department not found"
          }
        }
      }
    },
    "/api/v1/programs": {
      "get": {
        "tags": [
          "Programmes"
        ],
        "summary": "Get all programs",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of programs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Programme"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Programmes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create a new program",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProgrammeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Program created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Programme"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          }
        }
      }
    },
    "/api/v1/programs/{id}": {
      "get": {
        "tags": [
          "Programmes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get program by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Program found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Programme"
                }
              }
            }
          },
          "404": {
            "description": "Program not found"
          }
        }
      },
      "put": {
        "tags": [
          "Programmes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update program",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProgrammeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Program updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Programme"
                }
              }
            }
          },
          "404": {
            "description": "Program not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Programmes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete program",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Program deleted successfully"
          },
          "404": {
            "description": "Program not found"
          }
        }
      }
    },
    "/api/v1/courses": {
      "get": {
        "tags": [
          "Cours ou Mati√®res"
        ],
        "summary": "Get all courses",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of courses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Course"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cours ou Mati√®res"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create a new course",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCourseDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Course created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          }
        }
      }
    },
    "/api/v1/courses/{id}": {
      "get": {
        "tags": [
          "Cours ou Mati√®res"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get course by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Course found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          },
          "404": {
            "description": "Course not found"
          }
        }
      },
      "put": {
        "tags": [
          "Cours ou Mati√®res"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update course",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCourseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Course updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          },
          "404": {
            "description": "Course not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Cours ou Mati√®res"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete course",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Course deleted successfully"
          },
          "404": {
            "description": "Course not found"
          }
        }
      }
    },
    "/api/v1/class-sessions": {
      "get": {
        "tags": [
          "Sessions de classe"
        ],
        "summary": "Get all class sessions",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of class sessions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClassSession"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sessions de classe"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create a new class session",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClassSessionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Class session created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClassSession"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          }
        }
      }
    },
    "/api/v1/class-sessions/{id}": {
      "get": {
        "tags": [
          "Sessions de classe"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get class session by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Class session found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClassSession"
                }
              }
            }
          },
          "404": {
            "description": "Class session not found"
          }
        }
      },
      "put": {
        "tags": [
          "Sessions de classe"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update class session",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClassSessionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Class session updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClassSession"
                }
              }
            }
          },
          "404": {
            "description": "Class session not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Sessions de classe"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete class session",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Class session deleted successfully"
          },
          "404": {
            "description": "Class session not found"
          }
        }
      }
    },
    "/api/v1/emargements": {
      "get": {
        "tags": [
          "Emargements"
        ],
        "summary": "Get all enrollments",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of enrollments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Emargement"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Emargements"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create a new enrellment",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmargementDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Enrellment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Emargement"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          }
        }
      }
    },
    "/api/v1/emargements/status/{id}/{status}": {
      "patch": {
        "tags": [
          "Emargements"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Set enrellment state",
        "description": "Changer l'√©tat de l'emargement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "PENDING",
                "PRESENT",
                "ABSENT",
                "SUPERVISOR_CONFIRMED",
                "CLASS_HEADER_CONFIRMED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Enrellment updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Enrellment not found"
          }
        }
      }
    },
    "/api/v1/emargements/{id}": {
      "get": {
        "tags": [
          "Emargements"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get enrellment by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Enrellment found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Emargement"
                }
              }
            }
          },
          "404": {
            "description": "Enrellment not found"
          }
        }
      },
      "put": {
        "tags": [
          "Emargements"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update enrellment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmargementDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Enrellment updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Emargement"
                }
              }
            }
          },
          "404": {
            "description": "Enrellment not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Emargements"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete enrellment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Enrellment deleted successfully"
          },
          "404": {
            "description": "Enrellment not found"
          }
        }
      }
    },
    "/api/v1/notifications": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Get all notifications",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of notifications",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Notifications"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create a new notification",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Notification created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          }
        }
      }
    },
    "/api/v1/notifications/{id}": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get notification by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "404": {
            "description": "Notification not found"
          }
        }
      },
      "put": {
        "tags": [
          "Notifications"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update notification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notification updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "404": {
            "description": "Notification not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Notifications"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete notification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification deleted successfully"
          },
          "404": {
            "description": "Notification not found"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "USER",
              "ADMIN",
              "TEACHER",
              "SUPERVISOR",
              "DELEGATE"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "phone",
          "role",
          "createdAt"
        ]
      },
      "SignedUserDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "token": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "USER",
              "ADMIN",
              "TEACHER",
              "SUPERVISOR",
              "DELEGATE"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "role",
          "createdAt"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "role": {
            "type": "string",
            "enum": [
              "USER",
              "ADMIN",
              "TEACHER",
              "SUPERVISOR",
              "DELEGATE"
            ]
          }
        },
        "required": [
          "name",
          "email",
          "phone",
          "role",
          "password"
        ]
      },
      "AcademicYear": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "periode": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "periode",
          "createdAt"
        ]
      },
      "CreateAcademicYearDto": {
        "type": "object",
        "properties": {
          "periode": {
            "type": "string",
            "example": "2024-2025"
          }
        },
        "required": [
          "periode"
        ]
      },
      "Organisation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "createdAt"
        ]
      },
      "CreateOrganisationDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "ESGIS"
          }
        },
        "required": [
          "name"
        ]
      },
      "Universite": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "organisation": {
            "$ref": "#/components/schemas/Organisation"
          },
          "responsable": {
            "$ref": "#/components/schemas/User"
          },
          "departements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Departement"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "organisation",
          "responsable",
          "createdAt"
        ]
      },
      "CreateUniversiteDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nom de l'universit√©",
            "example": "Universit√© de Paris"
          },
          "organisationId": {
            "type": "string",
            "description": "ID de l'organisation √† laquelle l'universit√© appartient"
          },
          "responsableId": {
            "type": "string",
            "description": "ID de l'utilisateur responsable de l'universit√©"
          }
        },
        "required": [
          "name",
          "organisationId",
          "responsableId"
        ]
      },
      "Departement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "university": {
            "$ref": "#/components/schemas/Universite"
          },
          "programs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Programme"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "university",
          "createdAt"
        ]
      },
      "CreateDepartementDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nom du d√©partement"
          },
          "universityId": {
            "type": "string",
            "description": "ID de l'universit√© √† laquelle le d√©partement appartient"
          }
        },
        "required": [
          "name",
          "universityId"
        ]
      },
      "Programme": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "departement": {
            "$ref": "#/components/schemas/Departement"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "departement",
          "createdAt"
        ]
      },
      "CreateProgrammeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nom du programme"
          },
          "departementId": {
            "type": "string",
            "description": "ID du d√©partement de l'universit√©"
          }
        },
        "required": [
          "name",
          "departementId"
        ]
      },
      "Course": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "volumeHoraire": {
            "type": "integer",
            "description": "Volume horaire du cours"
          },
          "programme": {
            "$ref": "#/components/schemas/Programme"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "programme",
          "volumeHoraire",
          "createdAt"
        ]
      },
      "CreateCourseDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nom du cours",
            "example": "Math√©matiques avanc√©es"
          },
          "volumeHoraire": {
            "type": "integer",
            "description": "Volume horaire du cours",
            "example": 40
          },
          "programmeId": {
            "type": "string",
            "description": "ID du programme auquel le cours appartient"
          }
        },
        "required": [
          "name",
          "volumeHoraire",
          "programmeId"
        ]
      },
      "ClassSession": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "heureDebut": {
            "type": "string"
          },
          "heureFin": {
            "type": "string"
          },
          "academicYear": {
            "$ref": "#/components/schemas/AcademicYear"
          },
          "course": {
            "$ref": "#/components/schemas/Course"
          },
          "professor": {
            "$ref": "#/components/schemas/User"
          },
          "classRepresentative": {
            "$ref": "#/components/schemas/User"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "programme",
          "volumeHoraire",
          "createdAt"
        ]
      },
      "CreateClassSessionDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "heureDebut": {
            "type": "string"
          },
          "heureFin": {
            "type": "string"
          },
          "academicYearId": {
            "type": "string"
          },
          "courseId": {
            "type": "string"
          },
          "professorId": {
            "type": "string"
          },
          "classRepresentativeId": {
            "type": "string"
          }
        },
        "required": [
          "date",
          "heureDebut",
          "heureFin",
          "academicYearId",
          "courseId",
          "professorId",
          "classRepresentativeId"
        ]
      },
      "Emargement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "PRESENT",
              "ABSENT",
              "SUPERVISOR_CONFIRMED",
              "CLASS_HEADER_CONFIRMED"
            ],
            "description": "Statut initial de l'√©margement",
            "example": "En attente"
          },
          "classSession": {
            "$ref": "#/components/schemas/ClassSession"
          },
          "professor": {
            "$ref": "#/components/schemas/User"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "status",
          "professor",
          "classSession",
          "createdAt"
        ]
      },
      "CreateEmargementDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "PRESENT",
              "ABSENT",
              "SUPERVISOR_CONFIRMED",
              "CLASS_HEADER_CONFIRMED"
            ],
            "description": "Statut initial de l'√©margement",
            "example": "En attente"
          },
          "classSessionId": {
            "type": "string",
            "description": "ID de la session √† laquelle se rapporte l'√©margement",
            "example": "abcd1234"
          },
          "professorId": {
            "type": "string",
            "description": "ID du professeur concern√© (normalement celui qui se connecte pour √©marger)"
          }
        },
        "required": [
          "classSessionId",
          "professorId",
          "status"
        ]
      },
      "Notification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "message": {
            "type": "string",
            "description": "Message de la notification",
            "example": "Votre cours a √©t√© valid√©."
          },
          "status": {
            "type": "string",
            "enum": [
              "SENT",
              "CONFIRMED",
              "RECEIVED",
              "READ"
            ],
            "description": "Statut initial de la notification",
            "example": "SENT"
          },
          "emargement": {
            "$ref": "#/components/schemas/Emargement"
          },
          "recipient": {
            "$ref": "#/components/schemas/User"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "message",
          "status",
          "createdAt"
        ]
      },
      "CreateNotificationDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message de la notification",
            "example": "Votre cours a √©t√© valid√©."
          },
          "status": {
            "type": "string",
            "enum": [
              "SENT",
              "CONFIRMED",
              "RECEIVED",
              "READ"
            ],
            "description": "Statut initial de la notification",
            "example": "PENDING"
          },
          "emargementId": {
            "type": "string",
            "description": "ID de l'√©margement qui d√©clenche la notification"
          },
          "recipientId": {
            "type": "string",
            "description": "ID du destinataire de la notification (g√©n√©ralement le responsable de l'universit√©)"
          }
        },
        "required": [
          "emargementId",
          "message",
          "status",
          "recipientId"
        ]
      }
    }
  }
}